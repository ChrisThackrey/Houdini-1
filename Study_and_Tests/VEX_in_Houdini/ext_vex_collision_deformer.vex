;_name	ext_vex_collision_deformer
; ModuleID = 'ext_vex_collision_deformer'

@P = external global <3 x double>
@Pw = external global double
@v = external global <3 x double>
@accel = external global <3 x double>
@age = external global double
@life = external global double
@pstate = external global i32
@id = external global i32
@ptnum = external global i32
@Cd = external global <3 x double>
@N = external global <3 x double>
@Npt = external global i32
@Time = external global double
@Frame = external global double
@TimeInc = external global double
@0 = private constant [4 x i8] c"sdf\00"

define void @ext_vex_collision_deformer() nounwind {
entry:
  %P = load <3 x double>* @P
  %return = call double @"volumesample@FISV"(i32 1, i8* getelementptr inbounds ([4 x i8]* @0, i32 0, i32 0), <3 x double> %P)
  %return2 = fcmp olt double %return, 0.000000e+00
  %return3 = zext i1 %return2 to i32
  br i1 %return2, label %true, label %end

true:                                             ; preds = %entry
  %P4 = load <3 x double>* @P
  %return5 = call <3 x double> @"volumegradient@VISV"(i32 1, i8* getelementptr inbounds ([4 x i8]* @0, i32 0, i32 0), <3 x double> %P4)
  %return7 = call <3 x double> @"normalize@VV"(<3 x double> %return5)
  %P8 = load <3 x double>* @P
  %return11 = call double @"abs@FF"(double %return)
  %cast = call <3 x double> @"set@VF"(double %return11)
  %output = call <3 x double> @"mul@VV"(<3 x double> %return7, <3 x double> %cast)
  %output12 = call <3 x double> @"add@VV"(<3 x double> %P8, <3 x double> %output)
  store <3 x double> %output12, <3 x double>* @P
  store <3 x double> <double 1.000000e+00, double 0.000000e+00, double 1.000000e+00>, <3 x double>* @Cd
  br label %end

end:                                              ; preds = %true, %entry
  ret void
}

declare double @"volumesample@FISV"(i32, i8*, <3 x double>) nounwind

declare <3 x double> @"volumegradient@VISV"(i32, i8*, <3 x double>) nounwind

declare <3 x double> @"normalize@VV"(<3 x double>) nounwind

declare double @"abs@FF"(double) nounwind

declare <3 x double> @"set@VF"(double) nounwind readnone

declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) nounwind readnone

declare <3 x double> @"add@VV"(<3 x double>, <3 x double>) nounwind readnone

define void @__shader_default_arguments() {
entry:
  call void @ext_vex_collision_deformer()
  ret void
}

!context = !{!0}
!version = !{!1}

!0 = metadata !{metadata !"sop"}
!1 = metadata !{metadata !"13.0.621"}

;_code_end
